class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class DeleteMiddleNode:
    def _get_middle_node(self, head):
        slow = head
        fast = head
        prev = None
        while fast and fast.next:
            prev = slow
            slow = slow.next
            fast = fast.next.next
        return prev, slow

    def delete_middle(self, head):
        if not head or not head.next:
            return None  # Only one node, nothing to delete
        mid_prev, mid = self._get_middle_node(head)
        mid_prev.next = mid.next
        mid.next = None
        return head

# Creating list
node_values = [1, 3, 4, 7, 1, 2, 6]
root = ListNode(node_values[0])
current = root
for val in node_values[1:]:
    current.next = ListNode(val)
    current = current.next

# Deleting middle node
deleter = DeleteMiddleNode()
root = deleter.delete_middle(root)

# Printing result
while root:
    print(root.val)
    root = root.next
